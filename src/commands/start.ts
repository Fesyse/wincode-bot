import { db } from "@/db"
import { groups } from "@/db/schema"
import { adminActions } from "@/layout/admin-actions"
import { Context } from "@/types"
import { Markup } from "telegraf"

export const start = async (ctx: Context) => {
  const chat = ctx.update.message.chat

  if (chat.type !== "private") {
    const group = await db.query.groups.findFirst({
      where: (groupTable, { eq }) => eq(groupTable.id, chat.id.toString())
    })

    if (group) return ctx.replyWithHTML("–£ –≤–∞—Å —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞!")

    await db.insert(groups).values({
      id: chat.id.toString(),
      name: "title" in chat ? chat.title : "UNTITLED"
    })

    return ctx.replyWithHTML(
      "–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –≥—Ä—É–ø–ø–∞, —Ç–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –ª–µ–∫—Ü–∏–∏ –≤ —á–∞—Ç —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã <code>/add_lesson</code> –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º."
    )
  }

  // Admin
  if (!ctx.session.admin) {
    ctx.session = {}

    return ctx.reply(
      "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º, –µ—Å–ª–∏ –≤—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —á–∞—Ç.",
      Markup.inlineKeyboard([Markup.button.callback("üö™ –í–æ–π—Ç–∏", "login")], {
        columns: 1
      })
    )
  }

  ctx.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º.", adminActions())
}
