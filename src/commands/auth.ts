import { changePassword, login } from "@/auth"
import { type Context } from "@/types"
import { checkAdmin } from "@/utils"
import { Markup } from "telegraf"

export const enterLogin = (ctx: Context) => {
  if (checkAdmin(ctx)) return

  ctx.session.type = "login_username"
  ctx.reply("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: ")
}

export const handleLogin = async (ctx: Context) => {
  if (ctx.session.type === "login_username") {
    ctx.session.username = ctx.message.text

    ctx.reply("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
    ctx.session.type = "login_password"
  } else if (ctx.session.type === "login_password") {
    await ctx.deleteMessage(ctx.message.message_id)
    await Promise.all([
      ctx.reply("......"),
      login(
        {
          username: ctx.session.username!,
          password: ctx.message.text
        },
        ctx
      )
    ])
  } else if (ctx.session.type === "change_password") {
    await ctx.deleteMessage(ctx.message.message_id)
    await Promise.all([
      ctx.reply("......"),
      changePassword(
        {
          username: ctx.session.username!,
          password: ctx.message.text
        },
        ctx
      )
    ])
  }
}

export const logout = async (ctx: Context) => {
  ctx.session = {}

  await ctx.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏!")
  return ctx.reply(
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º, –µ—Å–ª–∏ –≤—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —á–∞—Ç.",
    Markup.inlineKeyboard([Markup.button.callback("üö™ –í–æ–π—Ç–∏", "login")], {
      columns: 1
    })
  )
}
